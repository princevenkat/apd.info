{"version":3,"sources":["js/bundle.js"],"names":["_typeof","window","CP","PenTimer","programNoLongerBeingMonitored","timeOfFirstCallToShouldStopLoop","_loopExits","_loopTimers","START_MONITORING_AFTER","STOP_ALL_MONITORING_TIMEOUT","MAX_TIME_IN_LOOP_WO_EXIT","exitedLoop","o","this","shouldStopLoop","programKilledSoStopMonitoring","t","_getTime","i","_checkOnInfiniteLoop","_sendErrorMessageToEditor","_shouldPostMessage","action","line","_findAroundLineNumber","parent","postMessage","JSON","stringify","_throwAnErrorToStopPen","document","location","href","match","Error","stack","Date","shouldStopExecution","console","warn","$","undefined","PluginName","Plugin","self","elem","$elem","data","options","extend","fn","default","metadata","lists","selector","prototype","limit","Out","firstLoad","push","splice","show","More","on","length","load","animateCss","animateIn","e","inIt","loadBtn","hide","addClass","animationName","one","animate","jQuery","nav","scrollTop","loadMore","openedClass","closedClass","tree","removeClass","each","branch","prepend","target","children","toggleClass","toggle","find","treed","closest","click","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\"object\"!=typeof window.CP&&(window.CP={}),window.CP.PenTimer={programNoLongerBeingMonitored:!1,timeOfFirstCallToShouldStopLoop:0,_loopExits:{},_loopTimers:{},START_MONITORING_AFTER:2e3,STOP_ALL_MONITORING_TIMEOUT:5e3,MAX_TIME_IN_LOOP_WO_EXIT:2200,exitedLoop:function(o){this._loopExits[o]=!0},shouldStopLoop:function(o){if(this.programKilledSoStopMonitoring)return!0;if(this.programNoLongerBeingMonitored)return!1;if(this._loopExits[o])return!1;var t=this._getTime();if(0===this.timeOfFirstCallToShouldStopLoop)return this.timeOfFirstCallToShouldStopLoop=t,!1;var i=t-this.timeOfFirstCallToShouldStopLoop;if(i<this.START_MONITORING_AFTER)return!1;if(i>this.STOP_ALL_MONITORING_TIMEOUT)return this.programNoLongerBeingMonitored=!0,!1;try{this._checkOnInfiniteLoop(o,t)}catch(o){return this._sendErrorMessageToEditor(),this.programKilledSoStopMonitoring=!0,!0}return!1},_sendErrorMessageToEditor:function(){try{if(this._shouldPostMessage()){var o={action:\"infinite-loop\",line:this._findAroundLineNumber()};parent.postMessage(JSON.stringify(o),\"*\")}else this._throwAnErrorToStopPen()}catch(o){this._throwAnErrorToStopPen()}},_shouldPostMessage:function(){return document.location.href.match(/boomerang/)},_throwAnErrorToStopPen:function(){throw\"We found an infinite loop in your Pen. We've stopped the Pen from running. Please correct it or contact support@codepen.io.\"},_findAroundLineNumber:function(){var o=new Error,t=0;if(o.stack){var i=o.stack.match(/boomerang\\S+:(\\d+):\\d+/);i&&(t=i[1])}return t},_checkOnInfiniteLoop:function(o,t){if(!this._loopTimers[o])return this._loopTimers[o]=t,!1;var i=t-this._loopTimers[o];if(i>this.MAX_TIME_IN_LOOP_WO_EXIT)throw\"Infinite Loop found on loop: \"+o},_getTime:function(){return+new Date}},window.CP.shouldStopExecution=function(o){var t=window.CP.PenTimer.shouldStopLoop(o);return t===!0&&console.warn(\"[CodePen]: An infinite loop (or a loop taking too long) was detected, so we stopped its execution. Sorry!\"),t},window.CP.exitedLoop=function(o){window.CP.PenTimer.exitedLoop(o)};\n;\r\n(function($, window, document, undefined) {\r\n    \"use strict\";\r\n    var PluginName = \"loadMore\";\r\n\r\n    /* Plugin Initialize\r\n    ------------------------------------------------------------*/\r\n    function Plugin(elem, options) {\r\n        this.self = this;\r\n        this.elem = elem;\r\n        this.$elem = $(elem);\r\n        this.metadata = this.$elem.data(\"options\");\r\n        this.options = $.extend({}, $.fn[PluginName].default, this.metadata, options);\r\n        this.lists = $(elem).children(this.options.selector);\r\n    };\r\n\r\n    /* Plugin Prototype\r\n    ------------------------------------------------------------*/\r\n    $.extend(Plugin.prototype, {\r\n        inIt: function() {\r\n            var self = this;\r\n            if (self.lists.length <= self.options.limit) {\r\n                self.Out();\r\n            } else {\r\n                self.More();\r\n            }\r\n            self.firstLoad = [];\r\n            self.firstLoad.push(self.lists.splice(0, self.options.limit));\r\n            //$(self.lists).not(self.firstLoad[0]).fadeOut();\r\n            //$(self.firstLoad[0]).fadeIn();\r\n            self.show(self.firstLoad[0]);\r\n        },\r\n        More: function() {\r\n            var self = this;\r\n            var i = 0;\r\n            $(self.options.loadBtn).on('click', function() {\r\n                i += 1;\r\n                if (self.lists.length) {\r\n                    self.firstLoad.push(self.lists.splice(0, self.options.load));\r\n                    //$(self.firstLoad[i]).fadeIn();\r\n                    self.show(self.firstLoad[i]);\r\n                }\r\n                if (self.lists.length == 0) {\r\n                    self.Out();\r\n                }\r\n            });\r\n        },\r\n        show: function(e) {\r\n            var self = this;\r\n            $(e).fadeIn();\r\n            if (self.options.animate) {\r\n                //$(e).addClass(\"animated \" + self.options.animateIn);\r\n                self.animateCss(self.options.animateIn, e);\r\n            }\r\n        },\r\n        Out: function() {\r\n            var self = this;\r\n            $(self.options.loadBtn).hide();\r\n        },\r\n        animateCss: function(animationName, elem) {\r\n            var animationEnd = 'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend';\r\n            $(elem).addClass('animated ' + animationName).one(animationEnd, function() {\r\n                $(elem).removeClass('animated ' + animationName);\r\n            });\r\n        }\r\n    });\r\n\r\n\r\n    /* Function Initialize\r\n    ------------------------------------------------------------*/\r\n    $.fn[PluginName] = function(options) {\r\n        return this.each(function() {\r\n            new Plugin(this, options).inIt();\r\n        })\r\n    };\r\n\r\n    /* Plugin Default Options\r\n    ------------------------------------------------------------*/\r\n    $.fn[PluginName].default = {\r\n        selector: '',\r\n        limit: 3,\r\n        load: 3,\r\n        loadBtn: '',\r\n        animate: true,\r\n        animateIn: 'fadeInUp'\r\n    };\r\n}(jQuery, window, document));\r\n\n\r\n\r\njQuery(\"document\").ready(function($){\r\n  // Sticky Nav Fucntion\r\n\tvar nav = $('nav');\r\n\t$(window).scroll(function () {\r\n\t\tif ($(this).scrollTop() > 136) {\r\n\t\t\tnav.addClass(\"f-nav\");\r\n\t\t} else {\r\n\t\t\tnav.removeClass(\"f-nav\");\r\n\t\t}\r\n\t});\r\n\r\n\r\n  // Loadmore Fucntion\r\n  $(\"#list\").loadMore({\r\n        selector: 'li',\r\n        loadBtn: '#btn',\r\n        limit: 3,\r\n        load: 3,\r\n        animate: true,\r\n        animateIn: 'fadeInUp'\r\n  });\r\n\r\n\r\n  // Archive Fucntion\r\n    $.fn.extend({\r\n      treed: function (o) {\r\n        \r\n        var openedClass = 'glyphicon-minus-sign';\r\n        var closedClass = 'glyphicon-plus-sign';\r\n        \r\n        if (typeof o != 'undefined'){\r\n          if (typeof o.openedClass != 'undefined'){\r\n          openedClass = o.openedClass;\r\n          }\r\n          if (typeof o.closedClass != 'undefined'){\r\n          closedClass = o.closedClass;\r\n          }\r\n        };\r\n        \r\n          //initialize each of the top levels\r\n          var tree = $(this);\r\n          tree.addClass(\"tree\");\r\n          tree.find('li').has(\"ul\").each(function () {\r\n              var branch = $(this); //li with children ul\r\n              branch.prepend(\"<i class='indicator fa \" + closedClass + \"'></i>\");\r\n              branch.addClass('branch');\r\n              branch.on('click', function (e) {\r\n                  if (this == e.target) {\r\n                      var icon = $(this).children('i:first');\r\n                      icon.toggleClass(openedClass + \" \" + closedClass);\r\n                      $(this).children().children().toggle();\r\n                  }\r\n              })\r\n              branch.children().children().toggle();\r\n          });\r\n          //fire event from the dynamically added icon\r\n        tree.find('.branch .indicator').each(function(){\r\n          $(this).on('click', function () {\r\n              $(this).closest('li').click();\r\n          });\r\n        });\r\n          //fire event to open branch if the li contains an anchor instead of text\r\n          tree.find('.branch>a').each(function () {\r\n              $(this).on('click', function (e) {\r\n                  $(this).closest('li').click();\r\n                  e.preventDefault();\r\n              });\r\n          });\r\n          //fire event to open branch if the li contains a button instead of text\r\n          tree.find('.branch>button').each(function () {\r\n              $(this).on('click', function (e) {\r\n                  $(this).closest('li').click();\r\n                  e.preventDefault();\r\n              });\r\n          });\r\n      }\r\n  });\r\n\r\n  //Initialization of treeviews\r\n  $('#tree1').treed({openedClass:'fa-folder-open', closedClass:'fa-folder'});\r\n  $('#tree2').treed({openedClass:'fa-folder-open', closedClass:'fa-folder'});\r\n\r\n});\r\n\r\n/*\r\n$(window).onload(function() {\r\n  //window.onload = function(){\r\n    var imgs = document.getElementsByTagName('img');\r\n    for( i=0; i<imgs.length; i++){if (window.CP.shouldStopExecution(1)){break;}\r\n         imgEl = imgs[i];\r\n         rgb = getAverageRGB(imgEl);\r\n        imgEl.parentNode.style.backgroundColor = 'rgb('+rgb.r+','+rgb.g+','+rgb.b+')';\r\n        //imgEl.parentNode.style.color = 'rgb('+(255-rgb.r)+','+(255-rgb.g)+','+(255-rgb.b)+')';\r\n    }\r\n    window.CP.exitedLoop(1);\r\n\r\n    function getAverageRGB(imgEl) {\r\n\r\n        var blockSize = 5, // only visit every 5 pixels\r\n            defaultRGB = {r:255,g:255,b:255}, // for non-supporting envs\r\n            canvas = document.createElement('canvas'),\r\n            context = canvas.getContext && canvas.getContext('2d'),\r\n            data, width, height,\r\n            i = -4,\r\n            length,\r\n            rgb = {r:0,g:0,b:0},\r\n            count = 0;\r\n\r\n        if (!context) {\r\n            return defaultRGB;\r\n        }\r\n\r\n        height = canvas.height = imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;\r\n        width = canvas.width = imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;\r\n\r\n        context.drawImage(imgEl, 0, 0);\r\n\r\n        try {\r\n            data = context.getImageData(0, 0, width, height);\r\n        } catch(e) {\r\n            return defaultRGB;\r\n        }\r\n\r\n        length = data.data.length;\r\n\r\n        while ( (i += blockSize * 4) < length ) {if (window.CP.shouldStopExecution(2)){break;}\r\n            ++count;\r\n            rgb.r += data.data[i];\r\n            rgb.g += data.data[i+1];\r\n            rgb.b += data.data[i+2];\r\n        }\r\nwindow.CP.exitedLoop(2);\r\n\r\n\r\n        // ~~ used to floor values\r\n        rgb.r = ~~(rgb.r/count);\r\n        rgb.g = ~~(rgb.g/count);\r\n        rgb.b = ~~(rgb.b/count);\r\n\r\n        return rgb;\r\n    }\r\n//}\r\n});\r\n\r\n*/\r\n"]}